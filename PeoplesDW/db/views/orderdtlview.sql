create or replace view orderdtlview
(
PRIORITY,
ORDERID,
SHIPID,
ITEM,
CUSTID,
FROMFACILITY,
UOM,
uomabbrev,
LINESTATUS,
linestatusabbrev,
COMMITSTATUS,
QTYENTERED,
ITEMENTERED,
UOMENTERED,
uomenteredabbrev,
QTYORDER,
WEIGHTORDER,
CUBEORDER,
AMTORDER,
QTYCOMMIT,
WEIGHTCOMMIT,
CUBECOMMIT,
AMTCOMMIT,
QTYSHIP,
WEIGHTSHIP,
CUBESHIP,
AMTSHIP,
QTYTOTCOMMIT,
WEIGHTTOTCOMMIT,
CUBETOTCOMMIT,
AMTTOTCOMMIT,
QTYRCVD,
WEIGHTRCVD,
CUBERCVD,
AMTRCVD,
QTYRCVDGOOD,
WEIGHTRCVDGOOD,
CUBERCVDGOOD,
AMTRCVDGOOD,
QTYRCVDDMGD,
WEIGHTRCVDDMGD,
CUBERCVDDMGD,
AMTRCVDDMGD,
COMMENT1,
STATUSUSER,
STATUSUPDATE,
LASTUSER,
LASTUPDATE,
lotnumber,
lotnumbernotnull,
rcvdvariance,
shipvariance,
qtyreturned,
weightreturned,
cubereturned,
hazardous,
invstatusind,
invstatus,
invclassind,
inventoryclass,
backorder,
backorderabbrev,
QTY2sort,
WEIGHT2sort,
CUBE2sort,
AMT2sort,
QTY2pack,
WEIGHT2pack,
CUBE2pack,
AMT2pack,
QTY2check,
WEIGHT2check,
CUBE2check,
AMT2check,
staffhours,
itemdescr,
asnvariance,
QTYpick,
WEIGHTpick,
CUBEpick,
AMTpick,
qtyoverpick,
recmethod,
consigneesku,
weightcommit_kgs,
weightship_kgs,
weighttotcommit_kgs,
weightrcvd_kgs,
weightrcvdgood_kgs,
weightrcvddmgd_kgs,
weightorder_kgs,
weight2sort_kgs,
weight2pack_kgs,
weight2check_kgs,
weightpick_kgs,
weight_entered_lbs,
weight_entered_kgs,
allocable_qty
)
as
select
PRIORITY,
ORDERID,
SHIPID,
od.ITEM,
od.CUSTID,
FROMFACILITY,
UOM,
substr(zit.uom_abbrev(uom),1,12),
LINESTATUS,
orderitemstatus.abbrev,
COMMITSTATUS,
QTYENTERED,
ITEMENTERED,
UOMENTERED,
substr(zit.uom_abbrev(uomentered),1,12),
QTYORDER,
WEIGHTORDER,
CUBEORDER,
AMTORDER,
QTYCOMMIT,
WEIGHTCOMMIT,
CUBECOMMIT,
AMTCOMMIT,
QTYSHIP,
WEIGHTSHIP,
CUBESHIP,
AMTSHIP,
QTYTOTCOMMIT,
WEIGHTTOTCOMMIT,
CUBETOTCOMMIT,
AMTTOTCOMMIT,
QTYRCVD,
WEIGHTRCVD,
CUBERCVD,
AMTRCVD,
QTYRCVDGOOD,
WEIGHTRCVDGOOD,
CUBERCVDGOOD,
AMTRCVDGOOD,
QTYRCVDDMGD,
WEIGHTRCVDDMGD,
CUBERCVDDMGD,
AMTRCVDDMGD,
COMMENT1,
STATUSUSER,
STATUSUPDATE,
od.LASTUSER,
od.LASTUPDATE,
lotnumber,
nvl(lotnumber,'(none)'),
nvl(qtyrcvd,0) - nvl(qtyorder,0),
nvl(qtyship,0) - nvl(qtyorder,0),
nvl(qtyrcvd,0) - nvl(qtyrcvdgood,0) - nvl(qtyrcvddmgd,0),
nvl(weightrcvd,0) - nvl(weightrcvdgood,0) - nvl(weightrcvddmgd,0),
nvl(cubercvd,0) - nvl(cubercvdgood,0) - nvl(cubercvddmgd,0),
substr(zci.hazardous_item(od.custid,od.item),1,1),
od.invstatusind,
od.invstatus,
od.invclassind,
od.inventoryclass,
od.backorder,
backorderpolicy.abbrev,
QTY2sort,
WEIGHT2sort,
CUBE2sort,
AMT2sort,
QTY2pack,
WEIGHT2pack,
CUBE2pack,
AMT2pack,
QTY2check,
WEIGHT2check,
CUBE2check,
AMT2check,
nvl(staffhrs,0),
nvl(custitem.descr,od.item),
nvl(od.asnvariance,'N'),
od.QTYpick,
od.WEIGHTpick,
od.CUBEpick,
od.AMTpick,
od.qtyoverpick,
(select max(pl.recmethod)
   from plate pl
  where od.orderid = pl.orderid
    and od.shipid = pl.shipid
    and od.item = pl.item
    and od.lotnumber = pl.lotnumber
    and pl.recmethod is not null) as recmethod,
od.consigneesku,
zwt.from_lbs_to_kgs(od.custid,od.weightcommit),
zwt.from_lbs_to_kgs(od.custid,od.weightship),
zwt.from_lbs_to_kgs(od.custid,od.weighttotcommit),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvd),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvdgood),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvddmgd),
zwt.from_lbs_to_kgs(od.custid,od.weightorder),
zwt.from_lbs_to_kgs(od.custid,od.weight2sort),
zwt.from_lbs_to_kgs(od.custid,od.weight2pack),
zwt.from_lbs_to_kgs(od.custid,od.weight2check),
zwt.from_lbs_to_kgs(od.custid,od.weightpick),
nvl(od.weight_entered_lbs,0),
nvl(od.weight_entered_kgs,0),
zcm.allocable_qty(od.fromfacility,od.custid,od.orderid,od.shipid,od.item,od.uom,
                  od.lotnumber,od.invstatusind,od.invstatus,
                  od.invclassind,od.inventoryclass)
from custitem, orderitemstatus, backorderpolicy, orderdtl od
where od.linestatus = orderitemstatus.code (+)
and od.backorder = backorderpolicy.code(+)
and od.custid = custitem.custid(+)
and od.item = custitem.item(+);

comment on table orderdtlview is '$Id$';

create or replace view pho_orderdtlview
(
PRIORITY,
ORDERID,
SHIPID,
ITEM,
CUSTID,
FROMFACILITY,
UOM,
uomabbrev,
LINESTATUS,
linestatusabbrev,
COMMITSTATUS,
QTYENTERED,
ITEMENTERED,
UOMENTERED,
uomenteredabbrev,
QTYORDER,
WEIGHTORDER,
CUBEORDER,
AMTORDER,
QTYCOMMIT,
WEIGHTCOMMIT,
CUBECOMMIT,
AMTCOMMIT,
QTYSHIP,
WEIGHTSHIP,
CUBESHIP,
AMTSHIP,
QTYTOTCOMMIT,
WEIGHTTOTCOMMIT,
CUBETOTCOMMIT,
AMTTOTCOMMIT,
QTYRCVD,
WEIGHTRCVD,
CUBERCVD,
AMTRCVD,
QTYRCVDGOOD,
WEIGHTRCVDGOOD,
CUBERCVDGOOD,
AMTRCVDGOOD,
QTYRCVDDMGD,
WEIGHTRCVDDMGD,
CUBERCVDDMGD,
AMTRCVDDMGD,
COMMENT1,
STATUSUSER,
STATUSUPDATE,
LASTUSER,
LASTUPDATE,
lotnumber,
lotnumbernotnull,
rcvdvariance,
shipvariance,
qtyreturned,
weightreturned,
cubereturned,
hazardous,
invstatusind,
invstatus,
invclassind,
inventoryclass,
backorder,
backorderabbrev,
QTY2sort,
WEIGHT2sort,
CUBE2sort,
AMT2sort,
QTY2pack,
WEIGHT2pack,
CUBE2pack,
AMT2pack,
QTY2check,
WEIGHT2check,
CUBE2check,
AMT2check,
staffhours,
itemdescr,
asnvariance,
QTYpick,
WEIGHTpick,
CUBEpick,
AMTpick,
qtyoverpick,
recmethod,
consigneesku,
weightcommit_kgs,
weightship_kgs,
weighttotcommit_kgs,
weightrcvd_kgs,
weightrcvdgood_kgs,
weightrcvddmgd_kgs,
weightorder_kgs,
weight2sort_kgs,
weight2pack_kgs,
weight2check_kgs,
weightpick_kgs,
weight_entered_lbs,
weight_entered_kgs,
QTYRCVDPCS,
QTYRCVDCTN,
QTYSHIPPCS,
QTYSHIPCTN
)
as
select
PRIORITY,
ORDERID,
SHIPID,
od.ITEM,
od.CUSTID,
FROMFACILITY,
UOM,
substr(zit.uom_abbrev(uom),1,12),
LINESTATUS,
orderitemstatus.abbrev,
COMMITSTATUS,
QTYENTERED,
ITEMENTERED,
UOMENTERED,
substr(zit.uom_abbrev(uomentered),1,12),
QTYORDER,
WEIGHTORDER,
CUBEORDER,
AMTORDER,
QTYCOMMIT,
WEIGHTCOMMIT,
CUBECOMMIT,
AMTCOMMIT,
QTYSHIP,
WEIGHTSHIP,
CUBESHIP,
AMTSHIP,
QTYTOTCOMMIT,
WEIGHTTOTCOMMIT,
CUBETOTCOMMIT,
AMTTOTCOMMIT,
QTYRCVD,
WEIGHTRCVD,
CUBERCVD,
AMTRCVD,
QTYRCVDGOOD,
WEIGHTRCVDGOOD,
CUBERCVDGOOD,
AMTRCVDGOOD,
QTYRCVDDMGD,
WEIGHTRCVDDMGD,
CUBERCVDDMGD,
AMTRCVDDMGD,
COMMENT1,
STATUSUSER,
STATUSUPDATE,
od.LASTUSER,
od.LASTUPDATE,
lotnumber,
nvl(lotnumber,'(none)'),
nvl(qtyrcvd,0) - nvl(qtyorder,0),
nvl(qtyship,0) - nvl(qtyorder,0),
nvl(qtyrcvd,0) - nvl(qtyrcvdgood,0) - nvl(qtyrcvddmgd,0),
nvl(weightrcvd,0) - nvl(weightrcvdgood,0) - nvl(weightrcvddmgd,0),
nvl(cubercvd,0) - nvl(cubercvdgood,0) - nvl(cubercvddmgd,0),
substr(zci.hazardous_item(od.custid,od.item),1,1),
od.invstatusind,
od.invstatus,
od.invclassind,
od.inventoryclass,
od.backorder,
backorderpolicy.abbrev,
QTY2sort,
WEIGHT2sort,
CUBE2sort,
AMT2sort,
QTY2pack,
WEIGHT2pack,
CUBE2pack,
AMT2pack,
QTY2check,
WEIGHT2check,
CUBE2check,
AMT2check,
nvl(staffhrs,0),
nvl(custitem.descr,od.item),
nvl(od.asnvariance,'N'),
od.QTYpick,
od.WEIGHTpick,
od.CUBEpick,
od.AMTpick,
od.qtyoverpick,
(select max(pl.recmethod)
   from plate pl
  where od.orderid = pl.orderid
    and od.shipid = pl.shipid
    and od.item = pl.item
    and od.lotnumber = pl.lotnumber
    and pl.recmethod is not null) as recmethod,
od.consigneesku,
zwt.from_lbs_to_kgs(od.custid,od.weightcommit),
zwt.from_lbs_to_kgs(od.custid,od.weightship),
zwt.from_lbs_to_kgs(od.custid,od.weighttotcommit),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvd),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvdgood),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvddmgd),
zwt.from_lbs_to_kgs(od.custid,od.weightorder),
zwt.from_lbs_to_kgs(od.custid,od.weight2sort),
zwt.from_lbs_to_kgs(od.custid,od.weight2pack),
zwt.from_lbs_to_kgs(od.custid,od.weight2check),
zwt.from_lbs_to_kgs(od.custid,od.weightpick),
nvl(od.weight_entered_lbs,0),
nvl(od.weight_entered_kgs,0),
nvl(zlbl.uom_qty_conv(custitem.custid, custitem.item, nvl(od.QTYRCVD,0), od.UOM, 'PCS'),0),
nvl(zlbl.uom_qty_conv(custitem.custid, custitem.item, nvl(od.QTYRCVD,0), od.UOM, 'CTN'),0),
nvl(zlbl.uom_qty_conv(custitem.custid, custitem.item, nvl(od.QTYSHIP,OD.qtyorder), od.UOM, 'PCS'),0),
nvl(zlbl.uom_qty_conv(custitem.custid, custitem.item, nvl(od.QTYSHIP,OD.qtyorder), od.UOM, 'CTN'),0)
from custitem, orderitemstatus, backorderpolicy, orderdtl od
where od.linestatus = orderitemstatus.code (+)
and od.backorder = backorderpolicy.code(+)
and od.custid = custitem.custid(+)
and od.item = custitem.item(+);

comment on table pho_orderdtlview is '$Id$';

create or replace view d2k_orderdtlview
(
PRIORITY,
ORDERID,
SHIPID,
ITEM,
CUSTID,
FROMFACILITY,
UOM,
uomabbrev,
LINESTATUS,
linestatusabbrev,
COMMITSTATUS,
QTYENTERED,
ITEMENTERED,
UOMENTERED,
uomenteredabbrev,
QTYORDER,
WEIGHTORDER,
CUBEORDER,
AMTORDER,
QTYCOMMIT,
WEIGHTCOMMIT,
CUBECOMMIT,
AMTCOMMIT,
QTYSHIP,
WEIGHTSHIP,
CUBESHIP,
AMTSHIP,
QTYTOTCOMMIT,
WEIGHTTOTCOMMIT,
CUBETOTCOMMIT,
AMTTOTCOMMIT,
QTYRCVD,
WEIGHTRCVD,
CUBERCVD,
AMTRCVD,
QTYRCVDGOOD,
WEIGHTRCVDGOOD,
CUBERCVDGOOD,
AMTRCVDGOOD,
QTYRCVDDMGD,
WEIGHTRCVDDMGD,
CUBERCVDDMGD,
AMTRCVDDMGD,
COMMENT1,
STATUSUSER,
STATUSUPDATE,
LASTUSER,
LASTUPDATE,
lotnumber,
lotnumbernotnull,
rcvdvariance,
shipvariance,
qtyreturned,
weightreturned,
cubereturned,
hazardous,
invstatusind,
invstatus,
invclassind,
inventoryclass,
backorder,
backorderabbrev,
QTY2sort,
WEIGHT2sort,
CUBE2sort,
AMT2sort,
QTY2pack,
WEIGHT2pack,
CUBE2pack,
AMT2pack,
QTY2check,
WEIGHT2check,
CUBE2check,
AMT2check,
staffhours,
itemdescr,
asnvariance,
QTYpick,
WEIGHTpick,
CUBEpick,
AMTpick,
qtyoverpick,
recmethod,
consigneesku,
weightcommit_kgs,
weightship_kgs,
weighttotcommit_kgs,
weightrcvd_kgs,
weightrcvdgood_kgs,
weightrcvddmgd_kgs,
weightorder_kgs,
weight2sort_kgs,
weight2pack_kgs,
weight2check_kgs,
weightpick_kgs,
weight_entered_lbs,
weight_entered_kgs,
uom_to_pallets,
qtyorder_plt
)
as
select
PRIORITY,
ORDERID,
SHIPID,
od.ITEM,
od.CUSTID,
FROMFACILITY,
UOM,
substr(zit.uom_abbrev(uom),1,12),
LINESTATUS,
orderitemstatus.abbrev,
COMMITSTATUS,
QTYENTERED,
ITEMENTERED,
UOMENTERED,
substr(zit.uom_abbrev(uomentered),1,12),
QTYORDER,
WEIGHTORDER,
CUBEORDER,
AMTORDER,
QTYCOMMIT,
WEIGHTCOMMIT,
CUBECOMMIT,
AMTCOMMIT,
QTYSHIP,
WEIGHTSHIP,
CUBESHIP,
AMTSHIP,
QTYTOTCOMMIT,
WEIGHTTOTCOMMIT,
CUBETOTCOMMIT,
AMTTOTCOMMIT,
QTYRCVD,
WEIGHTRCVD,
CUBERCVD,
AMTRCVD,
QTYRCVDGOOD,
WEIGHTRCVDGOOD,
CUBERCVDGOOD,
AMTRCVDGOOD,
QTYRCVDDMGD,
WEIGHTRCVDDMGD,
CUBERCVDDMGD,
AMTRCVDDMGD,
COMMENT1,
STATUSUSER,
STATUSUPDATE,
od.LASTUSER,
od.LASTUPDATE,
lotnumber,
nvl(lotnumber,'(none)'),
nvl(qtyrcvd,0) - nvl(qtyorder,0),
nvl(qtyship,0) - nvl(qtyorder,0),
nvl(qtyrcvd,0) - nvl(qtyrcvdgood,0) - nvl(qtyrcvddmgd,0),
nvl(weightrcvd,0) - nvl(weightrcvdgood,0) - nvl(weightrcvddmgd,0),
nvl(cubercvd,0) - nvl(cubercvdgood,0) - nvl(cubercvddmgd,0),
substr(zci.hazardous_item(od.custid,od.item),1,1),
od.invstatusind,
od.invstatus,
od.invclassind,
od.inventoryclass,
od.backorder,
backorderpolicy.abbrev,
QTY2sort,
WEIGHT2sort,
CUBE2sort,
AMT2sort,
QTY2pack,
WEIGHT2pack,
CUBE2pack,
AMT2pack,
QTY2check,
WEIGHT2check,
CUBE2check,
AMT2check,
nvl(staffhrs,0),
nvl(custitem.descr,od.item),
nvl(od.asnvariance,'N'),
od.QTYpick,
od.WEIGHTpick,
od.CUBEpick,
od.AMTpick,
od.qtyoverpick,
(select max(pl.recmethod)
   from plate pl
  where od.orderid = pl.orderid
    and od.shipid = pl.shipid
    and od.item = pl.item
    and od.lotnumber = pl.lotnumber
    and pl.recmethod is not null) as recmethod,
od.consigneesku,
zwt.from_lbs_to_kgs(od.custid,od.weightcommit),
zwt.from_lbs_to_kgs(od.custid,od.weightship),
zwt.from_lbs_to_kgs(od.custid,od.weighttotcommit),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvd),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvdgood),
zwt.from_lbs_to_kgs(od.custid,od.weightrcvddmgd),
zwt.from_lbs_to_kgs(od.custid,od.weightorder),
zwt.from_lbs_to_kgs(od.custid,od.weight2sort),
zwt.from_lbs_to_kgs(od.custid,od.weight2pack),
zwt.from_lbs_to_kgs(od.custid,od.weight2check),
zwt.from_lbs_to_kgs(od.custid,od.weightpick),
nvl(od.weight_entered_lbs,0),
nvl(od.weight_entered_kgs,0),
nvl(zlbl.uom_qty_conv(custitem.custid, custitem.item, 1, 'PLT', od.UOM),0),
nvl(zlbl.uom_qty_conv(custitem.custid, custitem.item, nvl(od.QTYORDER,0), od.UOM, 'PLT'),0)
from custitem, orderitemstatus, backorderpolicy, orderdtl od
where od.linestatus = orderitemstatus.code (+)
and od.backorder = backorderpolicy.code(+)
and od.custid = custitem.custid(+)
and od.item = custitem.item(+);

comment on table d2k_orderdtlview is '$Id$';

exit;
