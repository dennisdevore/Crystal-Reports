create or replace view plateshipplateview
(
LPID,
ITEM,
CUSTID,
FACILITY,
LOCATION,
STATUS,
UNITOFMEASURE,
QUANTITY,
TYPE,
SERIALNUMBER,
LOTNUMBER,
EXPIRATIONDATE,
EXPIRYACTION,
PO,
RECMETHOD,
CONDITION,
LASTOPERATOR,
LASTTASK,
FIFODATE,
PARENTLPID,
USERITEM1,
USERITEM2,
USERITEM3,
INVSTATUS,
INVENTORYCLASS,
statusabbrev,
unitofmeasureabbrev,
recmethodabbrev,
invstatusabbrev,
inventoryclassabbrev,
itemdescr,
platetypeabbrev,
hazardous,
conditionabbrev,
loadno,
orderid,
shipid,
weight,
plateorshipplate,
controlnumber,
fromlpid,
masterlpidlabel,
masterlpid,
trackingno,
productgroup,
lastuser,
lastupdate,
weight_kgs,
anvdate,
manufacturedate,
length,
width,
height,
pallet_weight
)
as
select
plate.LPID,
plate.ITEM,
plate.CUSTID,
plate.FACILITY,
plate.LOCATION,
plate.STATUS,
plate.UNITOFMEASURE,
plate.QUANTITY,
plate.TYPE,
plate.SERIALNUMBER,
plate.LOTNUMBER,
plate.EXPIRATIONDATE,
plate.EXPIRYACTION,
plate.PO,
plate.RECMETHOD,
plate.CONDITION,
plate.LASTOPERATOR,
plate.LASTTASK,
plate.fifodate,
plate.PARENTLPID,
plate.USERITEM1,
plate.USERITEM2,
plate.USERITEM3,
plate.INVSTATUS,
plate.INVENTORYCLASS,
substr(zlp.platestatus_abbrev(plate.status),1,12),
substr(zit.uom_abbrev(plate.unitofmeasure),1,12),
substr(zlp.handlingtype_abbrev(plate.recmethod),1,12),
substr(zlp.invstatus_abbrev(plate.invstatus),1,12),
substr(zlp.inventoryclass_abbrev(plate.inventoryclass),1,12),
substr(zit.item_descr(plate.custid,plate.item),1,255),
substr(zlp.platetype_abbrev(plate.type),1,12),
substr(zci.hazardous_item(plate.custid,plate.item),1,1),
substr(zlp.condition_abbrev(plate.condition),1,12),
plate.loadno,
plate.orderid,
plate.shipid,
plate.weight,
'P',
plate.controlnumber,
plate.fromlpid,
substr(zmp.plate_mstrplt(plate.lpid),1,15),
substr(zmp.plate_mstrplt(plate.lpid),1,15),
null,
custitem.productgroup,
plate.lastuser,
plate.lastupdate,
zwt.from_lbs_to_kgs(plate.custid,plate.weight),
plate.anvdate,
plate.manufacturedate,
plate.length,
plate.width,
plate.height,
plate.pallet_weight
from plate, custitem
where plate.custid = custitem.custid (+)
and plate.item = custitem.item (+)
and plate.status not in ('D','P')
and plate.type not in ('XP')
union all
select
shippingplate.LPID,
shippingplate.ITEM,
shippingplate.CUSTID,
shippingplate.openFACILITY,
shippingplate.LOCATION,
shippingplate.STATUS,
shippingplate.UNITOFMEASURE,
shippingplate.QUANTITY,
shippingplate.TYPE,
shippingplate.SERIALNUMBER,
shippingplate.LOTNUMBER,
zap.expiration_date(shippingplate.fromlpid),
substr(zap.expiry_action(shippingplate.fromlpid),1,2),
substr(zap.po(shippingplate.fromlpid),1,20),
substr(zap.rec_method(shippingplate.fromlpid),1,2),
substr(zap.condition(shippingplate.fromlpid),1,2),
substr(zap.last_operator(shippingplate.fromlpid),1,12),
substr(zap.last_task(shippingplate.fromlpid),1,2),
zap.fifo_date(shippingplate.fromlpid),
shippingplate.PARENTLPID,
shippingplate.USERITEM1,
shippingplate.USERITEM2,
shippingplate.USERITEM3,
shippingplate.INVSTATUS,
shippingplate.INVENTORYCLASS,
substr(zlp.shippingplatestatus_abbrev(shippingplate.status),1,12),
substr(zit.uom_abbrev(shippingplate.unitofmeasure),1,12),
substr(zlp.handlingtype_abbrev(substr(zap.rec_method(shippingplate.fromlpid),1,2)),1,12),
substr(zlp.invstatus_abbrev(shippingplate.invstatus),1,12),
substr(zlp.inventoryclass_abbrev(shippingplate.inventoryclass),1,12),
substr(zit.item_descr(shippingplate.custid,shippingplate.item),1,255),
substr(zlp.shippingplatetype_abbrev(shippingplate.type),1,12),
substr(zci.hazardous_item(shippingplate.custid,shippingplate.item),1,1),
substr(zlp.condition_abbrev(zap.condition(shippingplate.fromlpid)),1,12),
0,
0,
0,
shippingplate.weight,
'S',
null,
shippingplate.fromlpid,
substr(zmp.shipplate_mstrplt_label(shippingplate.lpid),1,15),
substr(zmp.shipplate_mstrplt(shippingplate.lpid),1,15),
trackingno,
custitem.productgroup,
shippingplate.lastuser,
shippingplate.lastupdate,
zwt.from_lbs_to_kgs(shippingplate.custid,shippingplate.weight),
null,
null,
shippingplate.length,
shippingplate.width,
shippingplate.height,
shippingplate.pallet_weight
from facility, custitem, shippingplate
where shippingplate.custid = custitem.custid (+)
  and shippingplate.item = custitem.item (+)
  and shippingplate.status in ('P','S','L')
  and shippingplate.type in ('F','P')
  and shippingplate.openfacility = facility.facility;

comment on table plateshipplateview is '$Id$';

create or replace view allplateview
(
LPID,
ITEM,
CUSTID,
FACILITY,
LOCATION,
STATUS,
UNITOFMEASURE,
QUANTITY,
TYPE,
SERIALNUMBER,
LOTNUMBER,
EXPIRATIONDATE,
EXPIRYACTION,
PO,
RECMETHOD,
CONDITION,
LASTOPERATOR,
LASTTASK,
FIFODATE,
PARENTLPID,
USERITEM1,
USERITEM2,
USERITEM3,
INVSTATUS,
INVENTORYCLASS,
statusabbrev,
unitofmeasureabbrev,
recmethodabbrev,
invstatusabbrev,
inventoryclassabbrev,
itemdescr,
platetypeabbrev,
hazardous,
conditionabbrev,
loadno,
orderid,
shipid,
weight,
plateorshipplate,
controlnumber,
fromlpid,
masterlpidlabel,
masterlpid,
trackingno,
productgroup,
manufacturedate,
creationdate,
lastuser,
lastupdate,
weight_kgs,
anvdate,
length,
width,
height,
pallet_weight
)
as
select
plate.LPID,
plate.ITEM,
plate.CUSTID,
plate.FACILITY,
plate.LOCATION,
plate.STATUS,
plate.UNITOFMEASURE,
plate.QUANTITY,
plate.TYPE,
plate.SERIALNUMBER,
plate.LOTNUMBER,
plate.EXPIRATIONDATE,
plate.EXPIRYACTION,
plate.PO,
plate.RECMETHOD,
plate.CONDITION,
plate.LASTOPERATOR,
plate.LASTTASK,
plate.fifodate,
plate.PARENTLPID,
plate.USERITEM1,
plate.USERITEM2,
plate.USERITEM3,
plate.INVSTATUS,
plate.INVENTORYCLASS,
substr(zlp.platestatus_abbrev(plate.status),1,12),
substr(zit.uom_abbrev(plate.unitofmeasure),1,12),
substr(zlp.handlingtype_abbrev(plate.recmethod),1,12),
substr(zlp.invstatus_abbrev(plate.invstatus),1,12),
substr(zlp.inventoryclass_abbrev(plate.inventoryclass),1,12),
substr(zit.item_descr(plate.custid,plate.item),1,255),
substr(zlp.platetype_abbrev(plate.type),1,12),
substr(zci.hazardous_item(plate.custid,plate.item),1,1),
substr(zlp.condition_abbrev(plate.condition),1,12),
plate.loadno,
plate.orderid,
plate.shipid,
plate.weight,
'P',
plate.controlnumber,
plate.fromlpid,
substr(zmp.plate_mstrplt(plate.lpid),1,15),
substr(zmp.plate_mstrplt(plate.lpid),1,15),
null,
custitem.productgroup,
plate.manufacturedate,
plate.creationdate,
plate.lastuser,
plate.lastupdate,
zwt.from_lbs_to_kgs(plate.custid,plate.weight),
plate.anvdate,
plate.length,
plate.width,
plate.height,
plate.pallet_weight
from plate, custitem
where plate.custid = custitem.custid (+)
and plate.item = custitem.item (+)
and plate.type not in ('XP')
union all
select
deletedplate.LPID,
deletedplate.ITEM,
deletedplate.CUSTID,
deletedplate.FACILITY,
deletedplate.LOCATION,
deletedplate.STATUS,
deletedplate.UNITOFMEASURE,
deletedplate.QUANTITY,
deletedplate.TYPE,
deletedplate.SERIALNUMBER,
deletedplate.LOTNUMBER,
deletedplate.EXPIRATIONDATE,
deletedplate.EXPIRYACTION,
deletedplate.PO,
deletedplate.RECMETHOD,
deletedplate.CONDITION,
deletedplate.LASTOPERATOR,
deletedplate.LASTTASK,
deletedplate.fifodate,
deletedplate.PARENTLPID,
deletedplate.USERITEM1,
deletedplate.USERITEM2,
deletedplate.USERITEM3,
deletedplate.INVSTATUS,
deletedplate.INVENTORYCLASS,
substr(zlp.platestatus_abbrev(deletedplate.status),1,12),
substr(zit.uom_abbrev(deletedplate.unitofmeasure),1,12),
substr(zlp.handlingtype_abbrev(deletedplate.recmethod),1,12),
substr(zlp.invstatus_abbrev(deletedplate.invstatus),1,12),
substr(zlp.inventoryclass_abbrev(deletedplate.inventoryclass),1,12),
substr(zit.item_descr(deletedplate.custid,deletedplate.item),1,255),
substr(zlp.platetype_abbrev(deletedplate.type),1,12),
substr(zci.hazardous_item(deletedplate.custid,deletedplate.item),1,1),
substr(zlp.condition_abbrev(deletedplate.condition),1,12),
deletedplate.loadno,
deletedplate.orderid,
deletedplate.shipid,
deletedplate.weight,
'D',
deletedplate.controlnumber,
deletedplate.fromlpid,
substr(zmp.plate_mstrplt(deletedplate.lpid),1,15),
substr(zmp.plate_mstrplt(deletedplate.lpid),1,15),
null,
custitem.productgroup,
deletedplate.manufacturedate,
deletedplate.creationdate,
deletedplate.lastuser,
deletedplate.lastupdate,
zwt.from_lbs_to_kgs(deletedplate.custid,deletedplate.weight),
deletedplate.anvdate,
deletedplate.length,
deletedplate.width,
deletedplate.height,
deletedplate.pallet_weight
from deletedplate, custitem
where deletedplate.custid = custitem.custid (+)
and deletedplate.item = custitem.item (+)
and deletedplate.type not in ('XP')
union all
select
shippingplate.LPID,
shippingplate.ITEM,
shippingplate.CUSTID,
shippingplate.openFACILITY,
shippingplate.LOCATION,
shippingplate.STATUS,
shippingplate.UNITOFMEASURE,
shippingplate.QUANTITY,
shippingplate.TYPE,
shippingplate.SERIALNUMBER,
shippingplate.LOTNUMBER,
zap.expiration_date(shippingplate.fromlpid),
substr(zap.expiry_action(shippingplate.fromlpid),1,2),
substr(zap.po(shippingplate.fromlpid),1,20),
substr(zap.rec_method(shippingplate.fromlpid),1,2),
substr(zap.condition(shippingplate.fromlpid),1,2),
substr(zap.last_operator(shippingplate.fromlpid),1,12),
substr(zap.last_task(shippingplate.fromlpid),1,2),
zap.fifo_date(shippingplate.fromlpid),
shippingplate.PARENTLPID,
shippingplate.USERITEM1,
shippingplate.USERITEM2,
shippingplate.USERITEM3,
shippingplate.INVSTATUS,
shippingplate.INVENTORYCLASS,
substr(zlp.shippingplatestatus_abbrev(shippingplate.status),1,12),
substr(zit.uom_abbrev(shippingplate.unitofmeasure),1,12),
substr(zlp.handlingtype_abbrev(substr(zap.rec_method(shippingplate.fromlpid),1,2)),1,12),
substr(zlp.invstatus_abbrev(shippingplate.invstatus),1,12),
substr(zlp.inventoryclass_abbrev(shippingplate.inventoryclass),1,12),
substr(zit.item_descr(shippingplate.custid,shippingplate.item),1,255),
substr(zlp.shippingplatetype_abbrev(shippingplate.type),1,12),
substr(zci.hazardous_item(shippingplate.custid,shippingplate.item),1,1),
substr(zlp.condition_abbrev(zap.condition(shippingplate.fromlpid)),1,12),
0,
0,
0,
shippingplate.weight,
'S',
null,
shippingplate.fromlpid,
substr(zmp.shipplate_mstrplt_label(shippingplate.lpid),1,15),
substr(zmp.shipplate_mstrplt(shippingplate.lpid),1,15),
trackingno,
custitem.productgroup,
to_date(null),
to_date(null),
shippingplate.lastuser,
shippingplate.lastupdate,
zwt.from_lbs_to_kgs(shippingplate.custid,shippingplate.weight),
null,
shippingplate.length,
shippingplate.width,
shippingplate.height,
shippingplate.pallet_weight
from facility, custitem, shippingplate
where shippingplate.custid = custitem.custid (+)
  and shippingplate.item = custitem.item (+)
  and shippingplate.status in ('P','S','L')
  and shippingplate.type in ('F','P')
  and shippingplate.openfacility = facility.facility;

comment on table allplateview is '$Id$';

-- exit;
