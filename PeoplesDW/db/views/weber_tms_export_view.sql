CREATE OR REPLACE VIEW WEBER_TMS_EXPORT_VIEW
(
   ORDERID,
   SHIPID,
   ORDERID_SHIPID,
   SHIPMENT_OWNER,
   DISPOSITION,
   MBL_PRI_REF,
   MBL_PRI_REF_TYPE,
   MBL_ADDL_REF,
   MBL_ADDL_REF_TYPE,
   COL_NOT_USED_1,
   PO_PRI_REF,
   PO_PRI_REF_TYPE,
   PO_DATE,
   SHIPMENT_TYPE,
   SHIPMENT_PRI_REF,
   SHIPMENT_PRI_REF_TYPE,
   SHIP_STATUS,
   SHIP_START_DATE,
   SHIP_END_DATE,
   DELIVERY_START_DATE,
   DELIVERY_END_DATE,
   ORIGIN_ALIAS,
   ORIGIN_NAME,
   ORIGIN_ADDRESS1,
   ORIGIN_ADDRESS2,
   ORIGIN_CITY,
   ORIGIN_STATE,
   ORIGIN_POSTALCODE,
   ORIGIN_COUNTRY,
   DEST_ALIAS,
   DEST_NAME,
   DEST_ADDRESS1,
   DEST_ADDRESS2,
   DEST_CITY,
   DEST_STATE,
   DEST_POSTALCODE,
   DEST_COUNTRY,
   BILL_ALIAS,
   BILL_NAME,
   BILL_ADDRESS1,
   BILL_ADDRESS2,
   BILL_CITY,
   BILL_STATE,
   BILL_POSTALCODE,
   BILL_COUNTRY,
   PAYMENT_METHOD,
   THIRD_PARTY,
   SCAC,
   COL_NOT_USED_2,
   COL_NOT_USED_3,
   SPECIAL_INSTRUCTIONS,
   COL_NOT_USED_4,
   ITEM_ID,
   ITEM_DESCRIPTION,
   ITEM_COMMODITY,
   ITEM_FREIGHTCLASS,
   ITEM_QUANTITY,
   ITEM_QUANTITY_UOM,
   ITEM_WEIGHT,
   COL_NOT_USED_5,
   COL_NOT_USED_6,
   ITEM_HAZMAT,
   ORDER_ITEM_QUANTITY,
   COL_NOT_USED_7,
   COL_NOT_USED_8,
   COL_NOT_USED_9,
   COL_NOT_USED_10,
   ITEM_QUANTITY_TOP_LEVEL,
   GL_CODE,
   DEST_PHONE,
   BUYER_CODE,
   COL_ACTUAL_QUANTITY,
   COL_ACTUAL_QUANTITY_UOM,
   COL_SHIPMENT_ADDL_REF_TYPE_1,
   COL_SHIPMENT_ADDL_REF_VAL_1,
   COL_SHIPMENT_ADDL_REF_TYPE_2,
   COL_SHIPMENT_ADDL_REF_VAL_2,
   COL_SHIPMENT_SERVICE_CODES,
   COL_ITEM_CUBE,
   COL_ITEM_TEMP_MIN,
   COL_ITEM_TEMP_MAX,
   COL_ITEM_TEMP_UNITS,
   COL_ITEM_STCC_CODE,
   COL_ITEM_STACKABILITY,
   COL_NOT_USED_11,
   COL_NOT_USED_12
)
AS
     SELECT /*+ index(orderhdr orderhdr_recent_order_id_idx) */
            oh.orderid,
            oh.shipid,
            oh.orderid || '-' || oh.shipid,
            oh.custid shipment_owner,
            'Update' disposition,        -- this is actually and update/insert
            tms.loadno mbl_pri_ref,
            'Load Number' mbl_pri_ref_type,
            tms.vicsbol mbl_addl_ref,
            'VICS BOL' mbl_addl_ref_type,
            NULL col_not_used_1,
            tms.po_num po_pri_ref,
            'PO Number' po_pri_ref_type,
            TO_CHAR (tms.entrydate, 'yyyy-mm-dd hh24:mi') po_date,
            tms.shiptype shipment_type,          -- brokerage, drayage, asset, etc
            tms.orderid shipment_pri_ref,
            'BOL' shipment_pri_ref_type,
            'Pre-Plan' ship_status,             -- usually pre-plan or pending
            TO_CHAR (tms.shipdate, 'yyyy-mm-dd hh24:mi') ship_start_date,
            TO_CHAR (tms.shipdate, 'yyyy-mm-dd hh24:mi') ship_end_date,
            TO_CHAR (tms.arrivaldate, 'yyyy-mm-dd hh24:mi') delivery_start_date,
            TO_CHAR (tms.arrivaldate, 'yyyy-mm-dd hh24:mi') delivery_end_date,
            tms.facility origin_alias,
            tms.shipper origin_name,
            tms.ship_add1 origin_address1,
            tms.ship_add2 origin_address2,
            tms.ship_city origin_city,
            tms.ship_state origin_state,
            tms.ship_zip origin_postalcode,
            'USA' origin_country,
--            tms.cons_num dest_alias,
--            tms.cons_name dest_name,
--            tms.cons_addr1 dest_address1,
--            tms.cons_addr2 dest_address2,
--            tms.cons_city dest_city,
--            tms.cons_state dest_state,
--            tms.cons_zip dest_postalcode,
            c.consignee dest_alias,
            c.name dest_name,
            c.addr1 dest_address1,
            c.addr2 dest_address2,
            c.city dest_city,
            c.state dest_state,
            c.postalcode dest_postalcode,
            'USA' dest_country,
            tms.billto_num bill_alias,
            tms.billto_name bill_name,
            tms.billto_add1 bill_address1,
            tms.billto_addr2 bill_address2,
            tms.billto_city bill_city,
            tms.billto_state bill_state,
            tms.billto_zip bill_postalcode,
            'USA' bill_country,
            CASE tms.terms
               WHEN 'P' THEN 'Prepaid'
               WHEN '3' THEN 'Third Party'
               WHEN 'C' THEN 'Collect'
               ELSE NULL
            END
               payment_method,                               -- Pre-Paid, etc.
            NULL third_party,
            tms.carrier scac,
            NULL col_not_used_2,
            NULL col_not_used_3,
            REGEXP_REPLACE (
               REPLACE (REPLACE (tms.all_com_varchar, CHR (10), ''),
                        CHR (13),
                        ''),
               '(\s){2,}',
               ' ')
               special_instructions,
            NULL col_not_used_4,
            COALESCE (tms.nmfc, tms.item) item_id,
            NVL2 (tms.nmfc, tms.nmfcdescr, tms.descr) item_description,
            tms.nmfc item_commodity,
            tms.class item_freightclass,
            SUM (tms.qtyorder) item_quantity,
            tms.uomentered item_quantity_uom,
            SUM (tms.weightorder) item_weight,
            NULL col_not_used_5,
            NULL col_not_used_6,
            CASE NVL (tms.haz_mat, 'N')
               WHEN 'Y' THEN 'TRUE'
               WHEN 'N' THEN 'FALSE'
            END
               item_hazmat,                                   -- TRUE or FALSE
            tms.pcs order_item_quantity,
            NULL col_not_used_7,
            NULL col_not_used_8,
            NULL col_not_used_9,
            NULL col_not_used_10,
            tms.outpallets item_quantity_top_level,
            NULL gl_code,
            tms.cons_phone dest_phone,
            NULL buyer_code,
            NULL col_actual_quantity,
            NULL col_actual_quantity_uom,
            'MoveType' col_shipment_addl_ref_type_1,
            'Outbound' col_shipment_addl_ref_val_1,
            'Customer Reference Number' col_shipment_addl_ref_type_2,
            tms.ship_ref_num col_shipment_addl_ref_val_2,
            NULL col_shipment_service_codes,
            NULL col_item_cube,
            NULL col_item_temp_min,
            NULL col_item_temp_max,
            NULL col_item_temp_units,
            NULL col_item_stcc_code,
            NULL col_item_stackability,
            NULL col_not_used_11,
            NULL col_not_used_12
       FROM alps.orderhdr oh
       		join links.weber_tms_mg_view tms on (
            		oh.orderid = tms.orderid
            	and oh.shipid = tms.shipid)
            left join alps.loadstop ls on (
            		oh.loadno = ls.loadno
            	and oh.stopno = ls.stopno)
            left join alps.consignee c on (
            		nvl(ls.shipto,tms.cons_num) = c.consignee)
      WHERE oh.recent_order_id like 'Y%'
        and oh.tms_status = '1'
        and nvl(oh.tms_carrier_optimized_yn,'X') = 'N'
   GROUP BY oh.orderid,
            oh.shipid,
            oh.custid,
            tms.loadno,
            tms.vicsbol,
            tms.po_num,
            TO_CHAR (tms.entrydate, 'yyyy-mm-dd hh24:mi'),
            tms.shiptype,
            tms.orderid,
            TO_CHAR (tms.shipdate, 'yyyy-mm-dd hh24:mi'),
            TO_CHAR (tms.shipdate, 'yyyy-mm-dd hh24:mi'),
            TO_CHAR (tms.arrivaldate, 'yyyy-mm-dd hh24:mi'),
            TO_CHAR (tms.arrivaldate, 'yyyy-mm-dd hh24:mi'),
            tms.facility,
            tms.shipper,
            tms.ship_add1,
            tms.ship_add2,
            tms.ship_city,
            tms.ship_state,
            tms.ship_zip,
--            tms.cons_num,
--            tms.cons_name,
--            tms.cons_addr1,
--            tms.cons_addr2,
--            tms.cons_city,
--            tms.cons_state,
--            tms.cons_zip,
            c.consignee,
            c.name,
            c.addr1,
            c.addr2,
            c.city,
            c.state,
            c.postalcode,
            tms.billto_num,
            tms.billto_name,
            tms.billto_add1,
            tms.billto_addr2,
            tms.billto_city,
            tms.billto_state,
            tms.billto_zip,
            CASE tms.terms
               WHEN 'P' THEN 'Prepaid'
               WHEN '3' THEN 'Third Party'
               WHEN 'C' THEN 'Collect'
               ELSE NULL
            END,
            tms.carrier,
            REPLACE (REPLACE (tms.all_com_varchar, CHR (10), ''),
                     CHR (13),
                     ''),
            COALESCE (tms.nmfc, tms.item),
            NVL2 (tms.nmfc, tms.nmfcdescr, tms.descr),
            tms.nmfc,
            tms.class,
            tms.uomentered,
            CASE NVL (tms.haz_mat, 'N')
               WHEN 'Y' THEN 'TRUE'
               WHEN 'N' THEN 'FALSE'
            END,
            tms.pcs,
            tms.cons_phone,
            tms.ship_ref_num,
            tms.outpallets;

CREATE OR REPLACE VIEW WEBER_TMS_IBEXPORT_VIEW
(
   ORDERID,
   SHIPID,
   ORDERID_SHIPID,
   SHIPMENT_OWNER,
   DISPOSITION,
   MBL_PRI_REF,
   MBL_PRI_REF_TYPE,
   MBL_ADDL_REF,
   MBL_ADDL_REF_TYPE,
   COL_NOT_USED_1,
   PO_PRI_REF,
   PO_PRI_REF_TYPE,
   PO_DATE,
   SHIPMENT_TYPE,
   SHIPMENT_PRI_REF,
   SHIPMENT_PRI_REF_TYPE,
   SHIP_STATUS,
   SHIP_START_DATE,
   SHIP_END_DATE,
   DELIVERY_START_DATE,
   DELIVERY_END_DATE,
   ORIGIN_ALIAS,
   ORIGIN_NAME,
   ORIGIN_ADDRESS1,
   ORIGIN_ADDRESS2,
   ORIGIN_CITY,
   ORIGIN_STATE,
   ORIGIN_POSTALCODE,
   ORIGIN_COUNTRY,
   DEST_ALIAS,
   DEST_NAME,
   DEST_ADDRESS1,
   DEST_ADDRESS2,
   DEST_CITY,
   DEST_STATE,
   DEST_POSTALCODE,
   DEST_COUNTRY,
   BILL_ALIAS,
   BILL_NAME,
   BILL_ADDRESS1,
   BILL_ADDRESS2,
   BILL_CITY,
   BILL_STATE,
   BILL_POSTALCODE,
   BILL_COUNTRY,
   PAYMENT_METHOD,
   THIRD_PARTY,
   SCAC,
   COL_NOT_USED_2,
   COL_NOT_USED_3,
   SPECIAL_INSTRUCTIONS,
   COL_NOT_USED_4,
   ITEM_ID,
   ITEM_DESCRIPTION,
   ITEM_COMMODITY,
   ITEM_FREIGHTCLASS,
   ITEM_QUANTITY,
   ITEM_QUANTITY_UOM,
   ITEM_WEIGHT,
   COL_NOT_USED_5,
   COL_NOT_USED_6,
   ITEM_HAZMAT,
   ORDER_ITEM_QUANTITY,
   COL_NOT_USED_7,
   COL_NOT_USED_8,
   COL_NOT_USED_9,
   COL_NOT_USED_10,
   ITEM_QUANTITY_TOP_LEVEL,
   GL_CODE,
   DEST_PHONE,
   BUYER_CODE,
   COL_ACTUAL_QUANTITY,
   COL_ACTUAL_QUANTITY_UOM,
   COL_SHIPMENT_ADDL_REF_TYPE_1,
   COL_SHIPMENT_ADDL_REF_VAL_1,
   COL_SHIPMENT_ADDL_REF_TYPE_2,
   COL_SHIPMENT_ADDL_REF_VAL_2,
   COL_SHIPMENT_SERVICE_CODES,
   COL_ITEM_CUBE,
   COL_ITEM_TEMP_MIN,
   COL_ITEM_TEMP_MAX,
   COL_ITEM_TEMP_UNITS,
   COL_ITEM_STCC_CODE,
   COL_ITEM_STACKABILITY,
   COL_NOT_USED_11,
   COL_NOT_USED_12
)
AS
     select /*+ index(orderhdr orderhdr_recent_order_id_idx) */
            tms.orderid,
            tms.shipid,
            tms.orderid || '-' || tms.shipid,
            tms.custid shipment_owner,
            'Update' disposition,        -- this is actually and update/insert
            tms.loadno mbl_pri_ref,
            'Load Number' mbl_pri_ref_type,
            alps.weber_get_bol (tms.orderid, tms.shipid, 3) mbl_addl_ref,
            'VICS BOL' mbl_addl_ref_type,
            NULL col_not_used_1,
            tms.po po_pri_ref,
            'PO Number' po_pri_ref_type,
            TO_CHAR (tms.entrydate, 'yyyy-mm-dd hh24:mi') po_date,
            oh.shiptype shipment_type,          -- brokerage, drayage, asset, etc
            tms.orderid shipment_pri_ref,
            'BOL' shipment_pri_ref_type,
            'Pre-Plan' ship_status,             -- usually pre-plan or pending
            TO_CHAR (oh.shipdate, 'yyyy-mm-dd hh24:mi') ship_start_date,
            TO_CHAR (oh.shipdate, 'yyyy-mm-dd hh24:mi') ship_end_date,
            TO_CHAR (oh.arrivaldate, 'yyyy-mm-dd hh24:mi') delivery_start_date,
            TO_CHAR (oh.arrivaldate, 'yyyy-mm-dd hh24:mi') delivery_end_date,
            oh.shipper origin_alias,
            nvl(oh.shippername,cs.name) origin_name,
            decode(oh.shippername,null,cs.addr1,oh.shipperaddr1) origin_address1,
            decode(oh.shippername,null,cs.addr2,oh.shipperaddr2) origin_address2,
            decode(oh.shippername,null,cs.city,oh.shippercity) origin_city,
            decode(oh.shippername,null,cs.state,oh.shipperstate) origin_state,
            decode(oh.shippername,null,cs.postalcode,oh.shipperpostalcode) origin_postalcode,
            'USA' origin_country,
            tms.tofacility dest_alias,
            cu.name dest_name,
            fa.addr1 dest_address1,
            fa.addr2 dest_address2,
            fa.city dest_city,
            fa.state dest_state,
            fa.postalcode dest_postalcode,
            'USA' dest_country,
            oh.consignee bill_alias,
            nvl(oh.billtoname,cb.name) bill_name,
            decode(oh.billtoname,null,cb.addr1,oh.billtoaddr1) bill_address1,
            decode(oh.billtoname,null,cb.addr2,oh.billtoaddr2) bill_address2,
            decode(oh.billtoname,null,cb.city,oh.billtocity) bill_city,
            decode(oh.billtoname,null,cb.state,oh.billtostate) bill_state,
            decode(oh.billtoname,null,cb.postalcode,oh.billtopostalcode) bill_postalcode,
            'USA' bill_country,
            CASE oh.shipterms
               WHEN 'P' THEN 'Prepaid'
               WHEN '3' THEN 'Third Party'
               WHEN 'C' THEN 'Collect'
               ELSE NULL
            END
               payment_method,                               -- Pre-Paid, etc.
            NULL third_party,
            oh.carrier scac,
            NULL col_not_used_2,
            NULL col_not_used_3,
            REGEXP_REPLACE (
               REPLACE (REPLACE (SUBSTR (LTRIM (long_to_char (OHC.ROWID,
                                          'ALPS',
                                          'ORDERHDRBOLCOMMENTS',
                                          'BOLCOMMENT')
                         || ' '
                         || long_to_char (CICON.ROWID,
                                          'ALPS',
                                          'CUSTITEMBOLCOMMENTS',
                                          'COMMENT1')
                         || ' '
                         || long_to_char (CICC.ROWID,
                                          'ALPS',
                                          'CUSTITEMBOLCOMMENTS',
                                          'COMMENT1')
                         || ' '
                         || long_to_char (CIC.ROWID,
                                          'ALPS',
                                          'CUSTITEMBOLCOMMENTS',
                                          'COMMENT1')), 1, 800), CHR (10), ''),
                        CHR (13),
                        ''),
               '(\s){2,}',
               ' ')
               special_instructions,
            NULL col_not_used_4,
            COALESCE (ci.nmfc, od.item) item_id,
            NVL2 (ci.nmfc, ncc.descr, ci.descr) item_description,
            ci.nmfc item_commodity,
            ncc.class item_freightclass,
            SUM (od.qtyorder) item_quantity,
            od.uomentered item_quantity_uom,
            SUM (od.weightorder) item_weight,
            NULL col_not_used_5,
            NULL col_not_used_6,
            CASE NVL (substr(zci.hazardous_item_on_order(tms.orderid,tms.shipid),1,1), 'N')
               WHEN 'Y' THEN 'TRUE'
               WHEN 'N' THEN 'FALSE'
            END
               item_hazmat,                                   -- TRUE or FALSE
            decode (tms.orderstatus, 'R', oh.qtyrcvd, oh.qtyorder) order_item_quantity,
            NULL col_not_used_7,
            NULL col_not_used_8,
            NULL col_not_used_9,
            NULL col_not_used_10,
            tms.links_plts_rcvd_good item_quantity_top_level,
            NULL gl_code,
            oh.shipperphone dest_phone,
            NULL buyer_code,
            NULL col_actual_quantity,
            NULL col_actual_quantity_uom,
            'MoveType' col_shipment_addl_ref_type_1,
            'Inbound' col_shipment_addl_ref_val_1,
            'Customer Reference Number' col_shipment_addl_ref_type_2,
            oh.reference col_shipment_addl_ref_val_2,
            NULL col_shipment_service_codes,
            NULL col_item_cube,
            NULL col_item_temp_min,
            NULL col_item_temp_max,
            NULL col_item_temp_units,
            NULL col_item_stcc_code,
            NULL col_item_stackability,
            NULL col_not_used_11,
            NULL col_not_used_12
       FROM alps.orderhdr oh,
            links.weber_tms_container_import tms,
            alps.facility fa,
            alps.customer cu,
            alps.orderdtl od,
            alps.custitem ci,
            alps.nmfclasscodes ncc,
            alps.orderhdrbolcomments ohc,
            alps.custitembolcomments cic,
            alps.custitembolcomments cicon,
            alps.custitembolcomments cicc,
            alps.consignee cs,
            alps.consignee cb
      WHERE oh.recent_order_id like 'Y%'
        and tms.orderid = oh.orderid
        and tms.shipid = oh.shipid
        and fa.facility = oh.tofacility
        and cu.custid = oh.custid
        and oh.orderid = od.orderid (+)
        and oh.shipid = od.shipid (+)
        and od.custid = ci.custid (+) 
        and od.item = ci.item (+) 
        and ci.nmfc = ncc.nmfc (+)
        and oh.orderid = ohc.orderid(+)
        and oh.shipid = ohc.shipid(+)
        and oh.custid = cic.custid(+)
        and cic.consignee(+) = 'default'
        and cic.item(+) = 'default'
        and oh.shipto = cicon.consignee(+)
        and cicon.custid(+) = 'default'
        and cicon.item(+) = 'default'
        and oh.custid = cicc.custid(+)
        and oh.shipto = cicc.consignee(+)
        and cicc.item(+) = 'default'
        and oh.shipper = cs.consignee(+)
        and oh.consignee = cb.consignee(+)
   GROUP BY tms.orderid,
            tms.shipid,
            tms.custid,
            tms.loadno,
            alps.weber_get_bol (tms.orderid, tms.shipid, 3),
            tms.po,
            TO_CHAR (tms.entrydate, 'yyyy-mm-dd hh24:mi'),
            oh.shiptype,
            TO_CHAR (oh.shipdate, 'yyyy-mm-dd hh24:mi'),
            TO_CHAR (oh.shipdate, 'yyyy-mm-dd hh24:mi'),
            TO_CHAR (oh.arrivaldate, 'yyyy-mm-dd hh24:mi'),
            TO_CHAR (oh.arrivaldate, 'yyyy-mm-dd hh24:mi'),
            oh.shipper,
            nvl(oh.shippername,cs.name),
            decode(oh.shippername,null,cs.addr1,oh.shipperaddr1),
            decode(oh.shippername,null,cs.addr2,oh.shipperaddr2),
            decode(oh.shippername,null,cs.city,oh.shippercity),
            decode(oh.shippername,null,cs.state,oh.shipperstate),
            decode(oh.shippername,null,cs.postalcode,oh.shipperpostalcode),
            tms.tofacility,
            cu.name,
            fa.addr1,
            fa.addr2,
            fa.city,
            fa.state,
            fa.postalcode,
            oh.consignee,
            nvl(oh.billtoname,cb.name),
            decode(oh.billtoname,null,cb.addr1,oh.billtoaddr1),
            decode(oh.billtoname,null,cb.addr2,oh.billtoaddr2),
            decode(oh.billtoname,null,cb.city,oh.billtocity),
            decode(oh.billtoname,null,cb.state,oh.billtostate),
            decode(oh.billtoname,null,cb.postalcode,oh.billtopostalcode),
            CASE oh.shipterms
               WHEN 'P' THEN 'Prepaid'
               WHEN '3' THEN 'Third Party'
               WHEN 'C' THEN 'Collect'
               ELSE NULL
            END,
            oh.carrier,
            REGEXP_REPLACE (
               REPLACE (REPLACE (SUBSTR (LTRIM (long_to_char (OHC.ROWID,
                                          'ALPS',
                                          'ORDERHDRBOLCOMMENTS',
                                          'BOLCOMMENT')
                         || ' '
                         || long_to_char (CICON.ROWID,
                                          'ALPS',
                                          'CUSTITEMBOLCOMMENTS',
                                          'COMMENT1')
                         || ' '
                         || long_to_char (CICC.ROWID,
                                          'ALPS',
                                          'CUSTITEMBOLCOMMENTS',
                                          'COMMENT1')
                         || ' '
                         || long_to_char (CIC.ROWID,
                                          'ALPS',
                                          'CUSTITEMBOLCOMMENTS',
                                          'COMMENT1')), 1, 800), CHR (10), ''),
                        CHR (13),
                        ''),
               '(\s){2,}',
               ' '),
            COALESCE (ci.nmfc, od.item),
            NVL2 (ci.nmfc, ncc.descr, ci.descr),
            ci.nmfc,
            ncc.class,
            od.uomentered,
            CASE NVL (substr(zci.hazardous_item_on_order(tms.orderid,tms.shipid),1,1), 'N')
               WHEN 'Y' THEN 'TRUE'
               WHEN 'N' THEN 'FALSE'
            END,
            decode (tms.orderstatus, 'R', oh.qtyrcvd, oh.qtyorder),
            tms.links_plts_rcvd_good,
            oh.shipperphone,
            oh.reference;
